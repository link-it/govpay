(function (global) {

  global.GovApiComponenti = {
    API_ENTE: 'API Ente',
    API_PAGAMENTO: 'API Pagamento',
    API_RAGIONERIA: 'API Ragioneria',
    API_BACKOFFICE: 'API Backoffice',
    API_PAGOPA: 'API PagoPA',
    API_PENDENZE: 'API Pendenze',
    API_BACKEND_IO: 'API AppIO',
    API_GOVPAY: 'API GovPay',
    API_HYPERSIC_APK: 'API HyperSIC APK',
    API_MAGGIOLI_JPPA: 'API Maggioli',
    API_MYPIVOT: 'API MyPivot',
    API_SECIM: 'API Secim',
    GOVPAY: 'Core GovPay'
  };

  global.GovApiTipiEvento = {
    API_BACKOFFICE: {
      addApplicazione: 'Configura applicazione',
      addConfigurazioni: 'Configura sistema',
      addContiAccredito: 'Configura conto accredito',
      addDominio: 'Configura dominio',
      addEntrata: 'Configura entrata',
      addEntrataDominio: 'Configura entrata dominio',
      addIntermediario: 'Configura intermediario',
      addOperatore: 'Configura operatore',
      addPendenza: 'Ricevuta nuova pendenza dall\'Ente',
      addPendenzaCustom: 'Ricevuta nuova pendenza dall\'Ente',
      addPendenzaPOST: 'Ricevuta nuova pendenza dall\'Ente',
	  addRicevuta: 'Acquisita ricevuta telematica',
      addRiconciliazione: 'Riconciliazione pagamenti',
      addRuolo: 'Configura ruolo',
      addStazione: 'Configura stazione',
      addTipoPendenza: 'Configura tipo pendenza',
      addTipoPendenzaDominio: 'Configura tipo pendenza dominio',
      addTracciatoPendenze: 'Inserisci tracciato pendenze',
      addTracciatoPendenzeDominio: 'Inserisci tracciato pendenze',
      addTracciatoPendenzeDominioTipoPendenza: 'Inserisci tracciato pendenze',
      addUnitaOperativa: 'Configura unita operativa',
      aggiornaConfigurazioni: 'Configurazione puntuale del sistema',
      findApplicazioni: 'Cerca applicazioni',
      findContiAccredito: 'Cerca conti accredito',
      findDomini: 'Cerca domini',
      findEntrate: 'Cerca entrate',
      findEntrateDominio: 'Cerca entrate dominio',
      findEnumerazioniServiziACL: 'Elenco servizi acl',
      findEnumerazioniVersioneConnettore: 'Elenco versioni connettore',
      findEventi: 'Cerca eventi',
      findFlussiRendicontazione: 'Cerca flussi rendicontazione',
      findIntermediari: 'Cerca intermediari',
      findNotifiche: 'Cerca notifiche',
      findOperatori: 'Cerca operatori',
      findOperazioni: 'Cerca operazioni',
      findOperazioniTracciatoPendenze: 'Cerca operazioni tracciato',
      findPagamenti: 'Cerca pagamenti',
      findPendenze: 'Cerca pendenze',
      findPromemoria: 'Cerca promemoria',
      findQuadratureRendicontazioni: 'Cerca statistiche rendicontazioni',
      findQuadratureRiscossioni: 'Cerca statistiche riscossioni',
      findRendicontazioni: 'Cerca rendicontazioni',
      findRiconciliazioni: 'Cerca riconciliazioni',
      findRiscossioni: 'Cerca riscossioni',
      findRpps: 'Cerca transazioni',
      findRuoli: 'Cerca ruoli',
      findStazioni: 'Cerca stazioni',
      findTipiPendenza: 'Cerca tipi pendenza',
      findTipiPendenzaDominio: 'Cerca tipi pendenza dominio',
      findTracciatiPendenze: 'Cerca tracciati pendenze',
      findUnitaOperative: 'Cerca unita operative',
      getApplicazione: 'Leggi applicazione',
      getAllegatoPendenza: 'Leggi allegato pendenza',
      getAvvisiDocumento: 'Richiesta verifica avviso documento all\'Ente',
      getAvviso: 'Richiesta verifica avviso all\'Ente',
      getConfigurazioni: 'Leggi configurazione sistema',
      getContiAccredito: 'Leggi conto accredito',
      getDominio: 'Leggi dominio',
      getEntrata: 'Leggi entrata',
      getEntrataDominio: 'Leggi entrata dominio',
      getEsitoTracciatoPendenze: 'Leggi tracciato esito',
      getEvento: 'Leggi evento',
      getFlussoRendicontazione: 'Leggi flusso di rendicontazione',
      getFlussoRendicontazioneByIdEData: 'Leggi flusso di rendicontazione',
      getFlussoRendicontazioneByDominioIdEData: 'Leggi flusso di rendicontazione',
      getInfo: 'Leggi info sistema',
      getIntermediario: 'Leggi intermediario',
      getLogo: 'Leggi logo dominio',
      getOperatore: 'Leggi operatore',
      getOperazione: 'Leggi operazione',
      getPagamento: 'Leggi pagamento',
      getPendenza: 'Leggi pendenza',
      getPendenzaByAvviso: 'Leggi pendenza tramite riferimento avviso',
      getProfilo: 'Leggi profilo',
      getReportEntratePreviste: 'Leggi report riscossioni',
      getRichiestaTracciatoPendenze: 'Leggi tracciato richiesta',
      getRiconciliazione: 'Leggi riconciliazione',
      getRiscossione: 'Leggi riscossione',
      getRpp: 'Leggi Transazione',
      getRpt: 'Leggi RPT',
      getRt: 'Leggi RT',
      getRuolo: 'Leggi ruolo',
      getStampeTracciatoPendenze: 'Leggi avvisi pagamento',
      getStatoOperazione: 'Leggi stato operazione',
      getStazione: 'Leggi stazione',
      getTipoPendenza: 'Leggi tipo pendenza',
      getTipoPendenzaDominio: 'Leggi tipo pendenza dominio',
      getTracciatoPendenze: 'Leggi tracciato pendenze',
      getTracciatoNotificaPagamenti: 'Leggi tracciato notifica pagamenti',
      getUnitaOperativa: 'Leggi unita operativa',
      logout: 'Logout',
      updateApplicazione: 'Configura applicazione',
      updateOperatore: 'Configura operatore',
      updatePagamento: 'Configura pagamento',
      updatePendenza: 'Configura pendenza',
      updateProfilo: 'Configura profilo',
      updateRpp: 'Configura transazione',
      updateRuolo: 'Configura ruolo'
    },
    API_ENTE: {
      deletePagamento: 'Annulla pagamento',
      getAvviso: 'Spedita verifica avviso all\'Ente',
      inviaFlussoRendicontazione: 'Spedito flusso rendicontazioni alle API Ente Rendicontazione',
      inviaRpp: 'Spedita RPP rendicontazioni alle API Ente Rendicontazione',
      inviaSintesiFlussiRendicontazione: 'Spedito file sintesi flussi rendicontazioni alle API Ente Rendicontazione',
      inviaSintesiPagamenti: 'Spedito file sintesi pagamenti alle API Ente Rendicontazione',
      notificaRicevuta: 'Spedita ricevuta pagamento all\'Ente',
      notifyPagamento: 'Spedita notifica pagamento all\'Ente',
      verifyPendenza: 'Spedita verifica RPT all\'Ente',
      verifyPendenzaMod4: 'Spedita verifica pendenza modello 4'
    },
    API_PAGAMENTO: {
      addPagamento: 'Ricevuta richiesta pagamento da Portale',
      addPendenza: 'Ricevuta nuova pendenza dall\'Ente',
      findDomini: 'Cerca domini',
      findPagamenti: 'Cerca pagamenti',
      findPendenze: 'Cerca pendenze',
      findRpp: 'Cerca transazioni',
      findTipiPendenzaDominio: 'Cerca tipi pendenza',
      findUnitaOperative: 'Cerca unita operative',
      getAllegatoPendenza: 'Leggi allegato pendenza',
      getAvviso: 'Richiesta verifica avviso all\'Ente',
      getPagamento: 'Leggi pagamento',
      getPagamentoByIdSession: 'Leggi pagamento',
      getPendenza: 'Leggi pendenza',
      getProfilo: 'Leggi profilo',
      getRpp: 'Leggi Transazione',
      getRpt: 'Leggi RPT',
      getRt: 'Leggi RT',
      logout: 'Logout'
    },
    API_PAGOPA: {
      nodoChiediCopiaRT: 'Inviata richiesta copia RT a pagoPA',
      nodoChiediElencoFlussiRendicontazione: 'Richiesto elenco FR a pagoPA',
      nodoChiediFlussoRendicontazione: 'Richiesto flusso rendicontazioni a pagoPA',
      nodoChiediListaPendentiRPT: 'Richiesto elenco pagamenti sospesi a pagoPA',
      nodoChiediStatoRPT: 'Richiesto stato del pagamento a pagoPA',
      nodoInviaAvvisoDigitale: 'Inviato avviso digitale a pagoPA',
      nodoInviaCarrelloRPT: 'Inviato carrello RPT a pagoPA',
      nodoInviaRichiestaStorno: 'Inviata richiesta revoca a pagoPA',
      nodoInviaRispostaRevoca: 'Inviata RR a pagoPA',
      nodoInviaRPT: 'Inviata RPT attivata a pagoPA',
      paaAttivaRPT: 'Ricevuta attivazione RPT da pagoPA',
      paaInviaEsitoStorno: 'Ricevuta ER da pagoPA',
      paaInviaRichiestaRevoca: 'Ricevuta ER da pagoPA',
      paaInviaRT: 'Ricevuta RT da pagoPA',
      paaVerificaRPT: 'Ricevuta verifica RPT da pagoPA',
      paDemandPaymentNotice: 'Ricevuta richiesta avviso pagamento da pagoPA (v2)',
      paSendRT: 'Ricevuta RT da pagoPA (v2)',
      paSendRTV2: 'Ricevuta RT da pagoPA (v2)',
      paVerifyPaymentNotice: 'Ricevuta verifica RPT da pagoPA (v2)',
      paGetPayment: 'Ricevuta attivazione RPT da pagoPA (v2)',
      paGetPaymentV2: 'Ricevuta attivazione RPT da pagoPA (v2)',
	  getOrganizationReceiptIur: 'Richiesta RT a pagoPA'
    },
    API_PENDENZE: {
      addPendenza: 'Ricevuta nuova pendenza dall\'Ente',
      findPendenze: 'Cerca pendenze',
      findRpp: 'Cerca transazioni',
      getAllegatoPendenza: 'Leggi allegato pendenza',
      getAvvisiDocumento: 'Richiesta verifica avviso documento all\'Ente',
      getAvviso: 'Richiesta verifica avviso all\'Ente',
      getPendenza: 'Leggi pendenza',
      getPendenzaByAvviso: 'Leggi pendenza by riferimento avviso',
      getProfilo: 'Leggi profilo',
      getRpp: 'Leggi Transazione',
      getRpt: 'Leggi RPT',
      getRt: 'Leggi RT',
      updatePendenza: 'Configura pendenza'
    },
    API_RAGIONERIA: {
      addRiconciliazione: 'Riconciliazione pagamenti',
      findFlussiRendicontazione: 'Cerca flussi rendicontazione',
      findRicevute: 'Cerca ricevute',
      findRiconciliazioni: 'Cerca riconciliazioni',
      findRiscossioni: 'Cerca riscossioni',
      getAllegatoPendenza: 'Leggi allegato pendenza',
      getFlussoRendicontazione: 'Leggi flusso di rendicontazione',
      getFlussoRendicontazioneByIdEData: 'Leggi flusso di rendicontazione',
      getFlussoRendicontazioneDominio: 'Leggi flusso di rendicontazione',
      getFlussoRendicontazioneDominioByIdEData: 'Leggi flusso di rendicontazione',
      getProfilo: 'Leggi profilo',
      getRicevuta: 'Leggi ricevuta',
      getRiconciliazione: 'Leggi riconciliazione',
      getRiscossione: 'Leggi riscossione'
    },
    API_BACKEND_IO: {
      getProfile: 'Leggi profilo utente da backend AppIO',
      submitMessageforUserWithFiscalCodeInBody: 'Inviata avvisatura a backend AppIO',
      submitMessageforUserWithFiscalCodeInBodyScadenza: 'Inviato promemoria scadenza a backend AppIO',
      submitMessageforUserWithFiscalCodeInBodyRicevuta: 'Inviata ricevuta di pagamento a backend AppIO',
      submitMessageforUserWithFiscalCodeInBodyRicevutaPagamentoSenzaRPT: 'Inviata quietanza di pagamento a backend AppIO'
    },
    API_GOVPAY: {
      govpayInviaTracciatoEmail: 'Spedito tracciato di rendicontazione pagamenti GovPay via Email',
      govpayInviaTracciatoFileSystem: 'Salvato flusso GovPay su file system',
      govpayInviaTracciatoRest: 'Spedito tracciato di rendicontazione pagamenti GovPay via API Rest'
    },
    API_HYPERSIC_APK: {
      hyperSicAPKappaInviaTracciatoEmail: 'Spedito flusso HyperSIC - APKappa via Email',
      hyperSicAPKappaInviaTracciatoFileSystem: 'Salvato flusso HyperSIC - APKappa su file system'
    },
    API_MAGGIOLI_JPPA: {
      maggioliInviaEsitoPagamento: 'Inviata notifica di pagamento al connettore Maggioli JPPA',
      maggioliJppaInviaTracciatoEmail: 'Spedito tracciato di esito Maggioli JPPA via Email',
      maggioliRecuperaRT: 'Richiesta recupera RT dal client Maggioli JPPA',
      maggioliVerificaPagamentoInAttesa: 'Richiesta verifica pagamento dal client Maggioli JPPA'
    },
    API_MYPIVOT: {
      pivotInviaTracciatoEmail: 'Spedito flusso myPivot via Email',
      pivotInviaTracciatoFileSystem: 'Salvato flusso myPivot su file system',
      pivotSILAutorizzaImportFlusso: 'Richiesta autorizzazione import flusso myPivot',
      pivotSILChiediStatoImportFlusso: 'Richiesta stato import flusso myPivot',
      pivotSILInviaFlusso: 'Inviato flusso myPivot'
    },
    API_SECIM: {
      secimInviaTracciatoEmail: 'Spedito flusso Secim via Email',
      secimInviaTracciatoFileSystem: 'Salvato flusso Secim su file system'
    },
    GOVPAY: {
      govpayPagamentoEseguitoSenzaRPT: 'Pagamento eseguito senza RPT'
    }
  };

})(window);
