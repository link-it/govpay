package it.govpay.pagamento.v3.api;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import it.govpay.pagamento.v3.beans.FaultBean;
import it.govpay.pagamento.v3.beans.Profilo;

/**
 * GovPay - API Pagamento
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 */
@Path("/")
public interface UtentiApi  {

    /**
     * Elenco delle acl associate all&#x27;utenza chiamante
     *
     */
    @GET
    @Path("/profilo")
    @Produces({ "application/json" })
    @Operation(summary = "Elenco delle acl associate all'utenza chiamante", tags={ "Utenti" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Autorizzazioni dell'utenza chiamante", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Profilo.class))),
        @ApiResponse(responseCode = "401", description = "Richiesta non autenticata"),
        @ApiResponse(responseCode = "500", description = "Servizio non disponibile", content = @Content(mediaType = "application/json", schema = @Schema(implementation = FaultBean.class))) })
    public Response getProfilo();

    /**
     * Logout
     *
     */
    @GET
    @Path("/logout")
    @Produces({ "application/json" })
    @Operation(summary = "Logout", tags={ "Utenti" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Operazione eseguita con successo"),
        @ApiResponse(responseCode = "400", description = "Richiesta non correttamente formata", content = @Content(mediaType = "application/json", schema = @Schema(implementation = FaultBean.class))),
        @ApiResponse(responseCode = "401", description = "Richiesta non autenticata"),
        @ApiResponse(responseCode = "403", description = "Richiesta non autorizzata"),
        @ApiResponse(responseCode = "404", description = "Risorsa inesistente"),
        @ApiResponse(responseCode = "503", description = "Servizio non disponibile", content = @Content(mediaType = "application/json", schema = @Schema(implementation = FaultBean.class))) })
    public Response logout();
}
