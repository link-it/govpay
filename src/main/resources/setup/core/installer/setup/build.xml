
<project name="setup" basedir=".">
	
	<description>
        	SETUP
	</description>

	<import file="local_env.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
          <classpath>
              <pathelement location="${lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
       <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy">
          <classpath>
              <pathelement location="${lib}/ant/groovy-3.0.23.jar"/>
              <pathelement location="${lib}/ant/groovy-ant-3.0.23.jar"/>
          </classpath>
        </taskdef>
	
	<import file="./ant/properties-build.xml" />
	<import file="./ant/ds-build.xml" />
	<import file="./ant/sql-build.xml" />
	
	
	<property name="librerie" value="../lib/" />
	<property name="archivi" value="../archivi/" />
	<property name="sql" value="../sql/" />
	<property name="datasource" value="../datasource/" />
	
	
	<!-- path risorse console -->	
	<property name="antinstaller_govpay_backend_gui_base_path" value="/govpay/backend/gui/backoffice/" />
	<property name="antinstaller_govpay_backend_api_form_base_url" value="/govpay/backend/api/backoffice/rs/form/v1" />
	<property name="antinstaller_govpay_backend_api_public_base_url" value="/govpay/backend/api/backoffice/public" />
	
        <!-- Codifico le password -->
        <java classname="org.openspcoop2.utils.crypt.Password" fork="true" outputproperty="antinstaller_principal_pwd_md5">
                <arg value="${antinstaller_principal_pwd}" />
                <classpath>
                        <path location="${librerie}/shared/openspcoop2_utils-crypt-3.2.1.jar"/>
                </classpath>
        </java>
	
	<!-- Ripulisce la distribuzione -->
	<target name="installer_clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	
	<!-- Create the build directory structure used by compile -->
	<target name="installer_init">
		<mkdir dir="${build}" />
		<mkdir dir="${tmp_dir}" />
		<mkdir dir="${dist}" />
	</target>

	
	<target name="init_setup" depends="installer_clean,installer_init">
		<if>
        	<equals arg1="${antinstaller_as}" arg2="wildfly28" />
			<then>
				<unzip src="${archivi}/govpay.ear" dest="${tmp_dir}/govpay" />
			</then>
        </if>
		
		<if>
        	<equals arg1="${antinstaller_as}" arg2="tomcat11" />
			<then>
				<copy todir="${tmp_dir}/govpay">
					<fileset dir="${archivi}">
				    	<include name="*.war"/>
			        </fileset>
		        </copy>
			</then>
        </if>
		
	</target>
		
	<target name="setup_properties">
		 <echo>
		  $${antinstaller_work_folder}    => ${antinstaller_work_folder}
		  $${antinstaller_log_folder}    => ${antinstaller_log_folder}
		 </echo>

  <!-- Rimuovi lo slash finale con propertyregex (ant-contrib) -->
<groovy>
        def confpath = properties['antinstaller_work_folder']
        if (confpath.endsWith(System.getProperty('file.separator'))) {
            confpath = confpath.substring(0, confpath.length() - 1)
        }
        project.setUserProperty('antinstaller_work_folder_noendsep', confpath)

        def logpath = properties['antinstaller_log_folder']
        if (logpath.endsWith(System.getProperty('file.separator'))) {
            logpath = logpath.substring(0, logpath.length() - 1)
        }
        project.setUserProperty('antinstaller_log_folder_noendsep', logpath)

       def ext = properties['antinstaller_springsec_ext']
       if (ext) {
          project.setUserProperty('springsec_location','file:'+confpath)
       } else {
          project.setUserProperty('springsec_location','/WEB-INF')
       }      
</groovy>

    <!-- Se protocollo=https => autenticazione=ssl, altrimenti=basic -->
    <condition property="autenticazione" value="ssl" else="basic">
        <equals arg1="${protocollo}" arg2="https"/>
    </condition>


    <!-- dipendenza_modulo_postgres = snippet XML se esiste antinstaller_modulo_postgres, altrimenti vuoto -->
    <condition property="dipendenza_modulo_postgres"
               value="&lt;dependencies&gt;&lt;module name='${antinstaller_modulo_postgres}'/&gt;&lt;/dependencies&gt;"
               else="">
        <isset property="antinstaller_modulo_postgres"/>
    </condition>

		 <echo>
		  $${antinstaller_work_folder_noendsep}    => ${antinstaller_work_folder_noendsep}
		  $${antinstaller_log_folder_noendsep}    => ${antinstaller_log_folder_noendsep}
		  $${protocollo}    => ${protocollo}
		  $${autenticazione}    => ${autenticazione}
		  $${springsec_location}    => ${springsec_location}
		 </echo>

		
		<!-- GovPay EAR -->
		<if>
			<equals arg1="${antinstaller_as}" arg2="wildfly28" />
			<then>
				<foreach target="govpay_war_properties" param="file" >
				   <fileset dir="${tmp_dir}/govpay/"> 
				     <include name="**/*.war"/>
				   </fileset>
				</foreach>
		
		
				<antcall target="govpay_properties_settings">
					<param name="file" value="${tmp_dir}/govpay/properties/govpay.properties"/>
				</antcall>
				<antcall target="govpay_logger_properties_settings">
					<param name="file" value="${tmp_dir}/govpay/properties/log4j2.xml"/>
				</antcall>
				<antcall target="govpay_jboss_deployment_structure">
					<param name="file" value="${tmp_dir}/govpay/META-INF/jboss-deployment-structure.xml"/>
				</antcall>
		
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_dir}/govpay/properties"/>
					<param name="file" value="*.properties"/>
				</antcall>
			</then>
		</if>
		
		<!-- Tomcat -->
		<if>
			<equals arg1="${antinstaller_as}" arg2="tomcat11" />
			<then>
				<foreach target="govpay_war_properties_tomcat" param="file" >
				   <fileset dir="${tmp_dir}/govpay/"> 
				     <include name="**/*.war"/>
				   </fileset>
				</foreach>
		
		
<!--				<antcall target="govpay_properties_settings">-->
<!--					<param name="file" value="${tmp_dir}/govpay/properties/govpay.properties"/>-->
<!--				</antcall>-->
<!--				<antcall target="govpay_logger_properties_settings">-->
<!--					<param name="file" value="${tmp_dir}/govpay/properties/log4j2.xml"/>-->
<!--				</antcall>-->
<!--				<antcall target="govpay_jboss_deployment_structure">-->
<!--					<param name="file" value="${tmp_dir}/govpay/META-INF/jboss-deployment-structure.xml"/>-->
<!--				</antcall>-->
		
<!--				<antcall target="dos2unix">-->
<!--					<param name="dir" value="${tmp_dir}/govpay/properties"/>-->
<!--					<param name="file" value="*.properties"/>-->
<!--				</antcall>-->
			</then>
		</if>

	</target>
		
	<target name="setup_datasource">
		<copy file="${datasource}/${antinstaller_tipo_database}/govpay-ds.xml" todir="${tmp_dir}"/>
		<antcall target="ds_settings">
			<param name="file" value="${tmp_dir}/govpay-ds.xml"/>
		</antcall>
	</target>

	<target name="setup_sql">
		<copy file="${sql}/${antinstaller_tipo_database}/gov_pay.sql" todir="${tmp_dir}"/>
		<concat destfile="${tmp_dir}/gov_pay.sql" append="yes" >
			<header filtering="no" trimleading="yes">

-- Init
                
			</header>
			<filelist dir="${sql}" files="init.sql"/>
		</concat>
                <antcall target="sql_settings">
                        <param name="file" value="${tmp_dir}/gov_pay.sql"/>
                </antcall>
        </target>

	<target name="extract_war_spring" >
            <unzip src="${file}" dest="${dist}/cfg" >
                <patternset>
                  <include name="**/*-applicationContext-security.xml"/>
                </patternset>
		<mapper type="flatten"/>
    	    </unzip>
        </target>

	<target name="setup_completo"  depends="init_setup, setup_properties, setup_datasource, setup_sql, setup_finished"/>
	<target name="setup_finished">
		<delete dir="${dist}"/>

          <if>
          	<equals arg1="${antinstaller_springsec_ext}" arg2="true" />
		  	<then>
            	<mkdir dir="${dist}/cfg" />
	            
		  		<if>
					<equals arg1="${antinstaller_as}" arg2="wildfly28" />
					<then>
				  		<foreach target="extract_war_spring" param="file" >
		        	    	<fileset dir="${tmp_dir}/govpay/">
		                		<include name="**/api-*.war"/>
			                </fileset>
		        	    </foreach>
		  			</then>
		  		</if>
		  		
		  		<if>
					<equals arg1="${antinstaller_as}" arg2="tomcat11" />
					<then>
				  		<foreach target="extract_war_spring" param="file" >
		        	    	<fileset dir="${tmp_dir}/govpay/">
		                		<include name="govpay-api-*.war"/>
			                </fileset>
		        	    </foreach>
		  			</then>
		  		</if>
		  	</then>
          </if>

		<mkdir dir="${dist}/archivi" />
		<if>
			<equals arg1="${antinstaller_as}" arg2="wildfly28" />
			<then>
				<zip destfile="${dist}/archivi/govpay.ear" basedir="${tmp_dir}/govpay"/>
  			</then>
  		</if>
		
		<if>
			<equals arg1="${antinstaller_as}" arg2="tomcat11" />
			<then>
				<copy todir="${dist}/archivi">
					<fileset dir="${tmp_dir}/govpay"> 
						<include name="*.war" />
					</fileset>
				</copy>
  			</then>
  		</if>
		
		<mkdir dir="${dist}/datasource" />
		<copy file="${tmp_dir}/govpay-ds.xml" todir="${dist}/datasource" />
		<mkdir dir="${dist}/sql" />
		<mkdir dir="${dist}/sql/patch" />
		<copy file="${tmp_dir}/gov_pay.sql" todir="${dist}/sql"/>		
		<copy todir="${dist}/sql/patch">
			<fileset dir="${sql}/${antinstaller_tipo_database}/patch"> 
				<include name="**/*.sql" />
			</fileset>
		</copy>
                <delete dir="${file}.tmp" />
		<delete dir="${build}"/>
	</target>


</project>
