CREATE SEQUENCE seq_configurazione AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE configurazione
(
	nome VARCHAR(255) NOT NULL,
	valore LONGVARCHAR,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_configurazione_1 UNIQUE (nome),
	-- fk/pk keys constraints
	CONSTRAINT pk_configurazione PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_configurazione_1 ON configurazione (nome);
CREATE TABLE configurazione_init_seq (id BIGINT);
INSERT INTO configurazione_init_seq VALUES (NEXT VALUE FOR seq_configurazione);



CREATE SEQUENCE seq_intermediari AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE intermediari
(
	cod_intermediario VARCHAR(35) NOT NULL,
	cod_connettore_pdd VARCHAR(35) NOT NULL,
	cod_connettore_ftp VARCHAR(35),
	denominazione VARCHAR(255) NOT NULL,
	principal VARCHAR(4000) NOT NULL,
	principal_originale VARCHAR(4000) NOT NULL,
	abilitato BOOLEAN NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_intermediari_1 UNIQUE (cod_intermediario),
	-- fk/pk keys constraints
	CONSTRAINT pk_intermediari PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_intermediari_1 ON intermediari (cod_intermediario);
CREATE TABLE intermediari_init_seq (id BIGINT);
INSERT INTO intermediari_init_seq VALUES (NEXT VALUE FOR seq_intermediari);



CREATE SEQUENCE seq_stazioni AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE stazioni
(
	cod_stazione VARCHAR(35) NOT NULL,
	password VARCHAR(35) NOT NULL,
	abilitato BOOLEAN NOT NULL,
	application_code INT NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_intermediario BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_stazioni_1 UNIQUE (cod_stazione),
	-- fk/pk keys constraints
	CONSTRAINT fk_stz_id_intermediario FOREIGN KEY (id_intermediario) REFERENCES intermediari(id),
	CONSTRAINT pk_stazioni PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_stazioni_1 ON stazioni (cod_stazione);
CREATE TABLE stazioni_init_seq (id BIGINT);
INSERT INTO stazioni_init_seq VALUES (NEXT VALUE FOR seq_stazioni);



CREATE SEQUENCE seq_utenze AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE utenze
(
	principal VARCHAR(4000) NOT NULL,
	principal_originale VARCHAR(4000) NOT NULL,
	abilitato BOOLEAN NOT NULL,
	autorizzazione_domini_star BOOLEAN NOT NULL,
	autorizzazione_tipi_vers_star BOOLEAN NOT NULL,
	ruoli VARCHAR(512),
	password VARCHAR(255),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_utenze_1 UNIQUE (principal),
	-- fk/pk keys constraints
	CONSTRAINT pk_utenze PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_utenze_1 ON utenze (principal);

ALTER TABLE utenze ALTER COLUMN abilitato SET DEFAULT true;
ALTER TABLE utenze ALTER COLUMN autorizzazione_domini_star SET DEFAULT false;
ALTER TABLE utenze ALTER COLUMN autorizzazione_tipi_vers_star SET DEFAULT false;

CREATE TABLE utenze_init_seq (id BIGINT);
INSERT INTO utenze_init_seq VALUES (NEXT VALUE FOR seq_utenze);



CREATE SEQUENCE seq_applicazioni AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE applicazioni
(
	cod_applicazione VARCHAR(35) NOT NULL,
	auto_iuv BOOLEAN NOT NULL,
	firma_ricevuta VARCHAR(1) NOT NULL,
	cod_connettore_integrazione VARCHAR(255),
	trusted BOOLEAN NOT NULL,
	cod_applicazione_iuv VARCHAR(3),
	reg_exp VARCHAR(1024),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_utenza BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_applicazioni_1 UNIQUE (cod_applicazione),
	CONSTRAINT unique_applicazioni_2 UNIQUE (id_utenza),
	-- fk/pk keys constraints
	CONSTRAINT fk_app_id_utenza FOREIGN KEY (id_utenza) REFERENCES utenze(id),
	CONSTRAINT pk_applicazioni PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_applicazioni_1 ON applicazioni (cod_applicazione);
CREATE UNIQUE INDEX index_applicazioni_2 ON applicazioni (id_utenza);
CREATE TABLE applicazioni_init_seq (id BIGINT);
INSERT INTO applicazioni_init_seq VALUES (NEXT VALUE FOR seq_applicazioni);



CREATE SEQUENCE seq_domini AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE domini
(
	cod_dominio VARCHAR(35) NOT NULL,
	gln VARCHAR(35),
	abilitato BOOLEAN NOT NULL,
	ragione_sociale VARCHAR(70) NOT NULL,
	aux_digit INT NOT NULL,
	iuv_prefix VARCHAR(255),
	segregation_code INT,
	logo VARBINARY(16777215),
	cbill VARCHAR(255),
	aut_stampa_poste VARCHAR(255),
	cod_connettore_my_pivot VARCHAR(255),
	cod_connettore_secim VARCHAR(255),
	cod_connettore_gov_pay VARCHAR(255),
	cod_connettore_hyper_sic_apk VARCHAR(255),
	cod_connettore_maggioli_jppa VARCHAR(255),
	intermediato BOOLEAN NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_stazione BIGINT,
	id_applicazione_default BIGINT,
	-- unique constraints
	CONSTRAINT unique_domini_1 UNIQUE (cod_dominio),
	-- fk/pk keys constraints
	CONSTRAINT fk_dom_id_stazione FOREIGN KEY (id_stazione) REFERENCES stazioni(id),
	CONSTRAINT fk_dom_id_applicazione_default FOREIGN KEY (id_applicazione_default) REFERENCES applicazioni(id),
	CONSTRAINT pk_domini PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_domini_1 ON domini (cod_dominio);

ALTER TABLE domini ALTER COLUMN aux_digit SET DEFAULT 0;

CREATE TABLE domini_init_seq (id BIGINT);
INSERT INTO domini_init_seq VALUES (NEXT VALUE FOR seq_domini);



CREATE SEQUENCE seq_iban_accredito AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE iban_accredito
(
	cod_iban VARCHAR(255) NOT NULL,
	bic_accredito VARCHAR(255),
	postale BOOLEAN NOT NULL,
	abilitato BOOLEAN NOT NULL,
	descrizione VARCHAR(255),
	intestatario VARCHAR(255),
	aut_stampa_poste VARCHAR(255),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_dominio BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_iban_accredito_1 UNIQUE (cod_iban,id_dominio),
	-- fk/pk keys constraints
	CONSTRAINT fk_iba_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT pk_iban_accredito PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_iban_accredito_1 ON iban_accredito (cod_iban,id_dominio);
CREATE TABLE iban_accredito_init_seq (id BIGINT);
INSERT INTO iban_accredito_init_seq VALUES (NEXT VALUE FOR seq_iban_accredito);



CREATE SEQUENCE seq_tipi_tributo AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE tipi_tributo
(
	cod_tributo VARCHAR(255) NOT NULL,
	descrizione VARCHAR(255),
	tipo_contabilita VARCHAR(1),
	cod_contabilita VARCHAR(255),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_tipi_tributo_1 UNIQUE (cod_tributo),
	-- fk/pk keys constraints
	CONSTRAINT pk_tipi_tributo PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_tipi_tributo_1 ON tipi_tributo (cod_tributo);
CREATE TABLE tipi_tributo_init_seq (id BIGINT);
INSERT INTO tipi_tributo_init_seq VALUES (NEXT VALUE FOR seq_tipi_tributo);



CREATE SEQUENCE seq_tributi AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE tributi
(
	abilitato BOOLEAN NOT NULL,
	tipo_contabilita VARCHAR(1),
	codice_contabilita VARCHAR(255),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_dominio BIGINT NOT NULL,
	id_iban_accredito BIGINT,
	id_iban_appoggio BIGINT,
	id_tipo_tributo BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_tributi_1 UNIQUE (id_dominio,id_tipo_tributo),
	-- fk/pk keys constraints
	CONSTRAINT fk_trb_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT fk_trb_id_iban_accredito FOREIGN KEY (id_iban_accredito) REFERENCES iban_accredito(id),
	CONSTRAINT fk_trb_id_iban_appoggio FOREIGN KEY (id_iban_appoggio) REFERENCES iban_accredito(id),
	CONSTRAINT fk_trb_id_tipo_tributo FOREIGN KEY (id_tipo_tributo) REFERENCES tipi_tributo(id),
	CONSTRAINT pk_tributi PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_tributi_1 ON tributi (id_dominio,id_tipo_tributo);
CREATE TABLE tributi_init_seq (id BIGINT);
INSERT INTO tributi_init_seq VALUES (NEXT VALUE FOR seq_tributi);



CREATE SEQUENCE seq_uo AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE uo
(
	cod_uo VARCHAR(35) NOT NULL,
	abilitato BOOLEAN NOT NULL,
	uo_codice_identificativo VARCHAR(35),
	uo_denominazione VARCHAR(70),
	uo_indirizzo VARCHAR(70),
	uo_civico VARCHAR(16),
	uo_cap VARCHAR(16),
	uo_localita VARCHAR(35),
	uo_provincia VARCHAR(35),
	uo_nazione VARCHAR(2),
	uo_area VARCHAR(255),
	uo_url_sito_web VARCHAR(255),
	uo_email VARCHAR(255),
	uo_pec VARCHAR(255),
	uo_tel VARCHAR(255),
	uo_fax VARCHAR(255),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_dominio BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_uo_1 UNIQUE (cod_uo,id_dominio),
	-- fk/pk keys constraints
	CONSTRAINT fk_uo_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT pk_uo PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_uo_1 ON uo (cod_uo,id_dominio);
CREATE TABLE uo_init_seq (id BIGINT);
INSERT INTO uo_init_seq VALUES (NEXT VALUE FOR seq_uo);



CREATE SEQUENCE seq_utenze_domini AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE utenze_domini
(
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_utenza BIGINT NOT NULL,
	id_dominio BIGINT,
	id_uo BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_nzd_id_utenza FOREIGN KEY (id_utenza) REFERENCES utenze(id),
	CONSTRAINT fk_nzd_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT fk_nzd_id_uo FOREIGN KEY (id_uo) REFERENCES uo(id),
	CONSTRAINT pk_utenze_domini PRIMARY KEY (id)
);

CREATE TABLE utenze_domini_init_seq (id BIGINT);
INSERT INTO utenze_domini_init_seq VALUES (NEXT VALUE FOR seq_utenze_domini);



CREATE SEQUENCE seq_operatori AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE operatori
(
	nome VARCHAR(35) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_utenza BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_operatori_1 UNIQUE (id_utenza),
	-- fk/pk keys constraints
	CONSTRAINT fk_opr_id_utenza FOREIGN KEY (id_utenza) REFERENCES utenze(id),
	CONSTRAINT pk_operatori PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_operatori_1 ON operatori (id_utenza);
CREATE TABLE operatori_init_seq (id BIGINT);
INSERT INTO operatori_init_seq VALUES (NEXT VALUE FOR seq_operatori);



CREATE SEQUENCE seq_connettori AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE connettori
(
	cod_connettore VARCHAR(255) NOT NULL,
	cod_proprieta VARCHAR(255) NOT NULL,
	valore VARCHAR(255) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_connettori_1 UNIQUE (cod_connettore,cod_proprieta),
	-- fk/pk keys constraints
	CONSTRAINT pk_connettori PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_connettori_1 ON connettori (cod_connettore,cod_proprieta);
CREATE TABLE connettori_init_seq (id BIGINT);
INSERT INTO connettori_init_seq VALUES (NEXT VALUE FOR seq_connettori);



CREATE SEQUENCE seq_acl AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE acl
(
	ruolo VARCHAR(255),
	servizio VARCHAR(255) NOT NULL,
	diritti VARCHAR(255) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_utenza BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_acl_id_utenza FOREIGN KEY (id_utenza) REFERENCES utenze(id),
	CONSTRAINT pk_acl PRIMARY KEY (id)
);

CREATE TABLE acl_init_seq (id BIGINT);
INSERT INTO acl_init_seq VALUES (NEXT VALUE FOR seq_acl);



CREATE SEQUENCE seq_tracciati AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE tracciati
(
	cod_dominio VARCHAR(35) NOT NULL,
	cod_tipo_versamento VARCHAR(35),
	formato VARCHAR(10) NOT NULL,
	tipo VARCHAR(10) NOT NULL,
	stato VARCHAR(12) NOT NULL,
	descrizione_stato VARCHAR(256),
	data_caricamento TIMESTAMP NOT NULL,
	data_completamento TIMESTAMP,
	bean_dati LONGVARCHAR,
	file_name_richiesta VARCHAR(256),
	raw_richiesta VARBINARY(16777215),
	file_name_esito VARCHAR(256),
	raw_esito VARBINARY(16777215),
	zip_stampe VARBINARY(16777215),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_operatore BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_trc_id_operatore FOREIGN KEY (id_operatore) REFERENCES operatori(id),
	CONSTRAINT pk_tracciati PRIMARY KEY (id)
);

CREATE TABLE tracciati_init_seq (id BIGINT);
INSERT INTO tracciati_init_seq VALUES (NEXT VALUE FOR seq_tracciati);



CREATE SEQUENCE seq_tipi_versamento AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE tipi_versamento
(
	cod_tipo_versamento VARCHAR(35) NOT NULL,
	descrizione VARCHAR(255) NOT NULL,
	codifica_iuv VARCHAR(4),
	paga_terzi BOOLEAN NOT NULL,
	abilitato BOOLEAN NOT NULL,
	bo_form_tipo VARCHAR(35),
	bo_form_definizione LONGVARCHAR,
	bo_validazione_def LONGVARCHAR,
	bo_trasformazione_tipo VARCHAR(35),
	bo_trasformazione_def LONGVARCHAR,
	bo_cod_applicazione VARCHAR(35),
	bo_abilitato BOOLEAN NOT NULL,
	pag_form_tipo VARCHAR(35),
	pag_form_definizione LONGVARCHAR,
	pag_form_impaginazione LONGVARCHAR,
	pag_validazione_def LONGVARCHAR,
	pag_trasformazione_tipo VARCHAR(35),
	pag_trasformazione_def LONGVARCHAR,
	pag_cod_applicazione VARCHAR(35),
	pag_abilitato BOOLEAN NOT NULL,
	avv_mail_prom_avv_abilitato BOOLEAN NOT NULL,
	avv_mail_prom_avv_pdf BOOLEAN,
	avv_mail_prom_avv_tipo VARCHAR(35),
	avv_mail_prom_avv_oggetto LONGVARCHAR,
	avv_mail_prom_avv_messaggio LONGVARCHAR,
	avv_mail_prom_ric_abilitato BOOLEAN NOT NULL,
	avv_mail_prom_ric_pdf BOOLEAN,
	avv_mail_prom_ric_tipo VARCHAR(35),
	avv_mail_prom_ric_oggetto LONGVARCHAR,
	avv_mail_prom_ric_messaggio LONGVARCHAR,
	avv_mail_prom_ric_eseguiti BOOLEAN,
	avv_mail_prom_scad_abilitato BOOLEAN NOT NULL,
	avv_mail_prom_scad_preavviso INT,
	avv_mail_prom_scad_tipo VARCHAR(35),
	avv_mail_prom_scad_oggetto LONGVARCHAR,
	avv_mail_prom_scad_messaggio LONGVARCHAR,
	visualizzazione_definizione LONGVARCHAR,
	trac_csv_tipo VARCHAR(35),
	trac_csv_header_risposta LONGVARCHAR,
	trac_csv_template_richiesta LONGVARCHAR,
	trac_csv_template_risposta LONGVARCHAR,
	avv_app_io_prom_avv_abilitato BOOLEAN NOT NULL,
	avv_app_io_prom_avv_tipo VARCHAR(35),
	avv_app_io_prom_avv_oggetto LONGVARCHAR,
	avv_app_io_prom_avv_messaggio LONGVARCHAR,
	avv_app_io_prom_ric_abilitato BOOLEAN NOT NULL,
	avv_app_io_prom_ric_tipo VARCHAR(35),
	avv_app_io_prom_ric_oggetto LONGVARCHAR,
	avv_app_io_prom_ric_messaggio LONGVARCHAR,
	avv_app_io_prom_ric_eseguiti BOOLEAN,
	avv_app_io_prom_scad_abilitato BOOLEAN NOT NULL,
	avv_app_io_prom_scad_preavviso INT,
	avv_app_io_prom_scad_tipo VARCHAR(35),
	avv_app_io_prom_scad_oggetto LONGVARCHAR,
	avv_app_io_prom_scad_messaggio LONGVARCHAR,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_tipi_versamento_1 UNIQUE (cod_tipo_versamento),
	-- fk/pk keys constraints
	CONSTRAINT pk_tipi_versamento PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_tipi_versamento_1 ON tipi_versamento (cod_tipo_versamento);

ALTER TABLE tipi_versamento ALTER COLUMN paga_terzi SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN bo_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN pag_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN avv_mail_prom_avv_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN avv_mail_prom_ric_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN avv_mail_prom_scad_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN avv_app_io_prom_avv_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN avv_app_io_prom_ric_abilitato SET DEFAULT false;
ALTER TABLE tipi_versamento ALTER COLUMN avv_app_io_prom_scad_abilitato SET DEFAULT false;

CREATE TABLE tipi_versamento_init_seq (id BIGINT);
INSERT INTO tipi_versamento_init_seq VALUES (NEXT VALUE FOR seq_tipi_versamento);



CREATE SEQUENCE seq_tipi_vers_domini AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE tipi_vers_domini
(
	codifica_iuv VARCHAR(4),
	paga_terzi BOOLEAN,
	abilitato BOOLEAN,
	bo_form_tipo VARCHAR(35),
	bo_form_definizione LONGVARCHAR,
	bo_validazione_def LONGVARCHAR,
	bo_trasformazione_tipo VARCHAR(35),
	bo_trasformazione_def LONGVARCHAR,
	bo_cod_applicazione VARCHAR(35),
	bo_abilitato BOOLEAN,
	pag_form_tipo VARCHAR(35),
	pag_form_definizione LONGVARCHAR,
	pag_form_impaginazione LONGVARCHAR,
	pag_validazione_def LONGVARCHAR,
	pag_trasformazione_tipo VARCHAR(35),
	pag_trasformazione_def LONGVARCHAR,
	pag_cod_applicazione VARCHAR(35),
	pag_abilitato BOOLEAN,
	avv_mail_prom_avv_abilitato BOOLEAN,
	avv_mail_prom_avv_pdf BOOLEAN,
	avv_mail_prom_avv_tipo VARCHAR(35),
	avv_mail_prom_avv_oggetto LONGVARCHAR,
	avv_mail_prom_avv_messaggio LONGVARCHAR,
	avv_mail_prom_ric_abilitato BOOLEAN,
	avv_mail_prom_ric_pdf BOOLEAN,
	avv_mail_prom_ric_tipo VARCHAR(35),
	avv_mail_prom_ric_oggetto LONGVARCHAR,
	avv_mail_prom_ric_messaggio LONGVARCHAR,
	avv_mail_prom_ric_eseguiti BOOLEAN,
	avv_mail_prom_scad_abilitato BOOLEAN,
	avv_mail_prom_scad_preavviso INT,
	avv_mail_prom_scad_tipo VARCHAR(35),
	avv_mail_prom_scad_oggetto LONGVARCHAR,
	avv_mail_prom_scad_messaggio LONGVARCHAR,
	visualizzazione_definizione LONGVARCHAR,
	trac_csv_tipo VARCHAR(35),
	trac_csv_header_risposta LONGVARCHAR,
	trac_csv_template_richiesta LONGVARCHAR,
	trac_csv_template_risposta LONGVARCHAR,
	app_io_api_key VARCHAR(255),
	avv_app_io_prom_avv_abilitato BOOLEAN,
	avv_app_io_prom_avv_tipo VARCHAR(35),
	avv_app_io_prom_avv_oggetto LONGVARCHAR,
	avv_app_io_prom_avv_messaggio LONGVARCHAR,
	avv_app_io_prom_ric_abilitato BOOLEAN,
	avv_app_io_prom_ric_tipo VARCHAR(35),
	avv_app_io_prom_ric_oggetto LONGVARCHAR,
	avv_app_io_prom_ric_messaggio LONGVARCHAR,
	avv_app_io_prom_ric_eseguiti BOOLEAN,
	avv_app_io_prom_scad_abilitato BOOLEAN,
	avv_app_io_prom_scad_preavviso INT,
	avv_app_io_prom_scad_tipo VARCHAR(35),
	avv_app_io_prom_scad_oggetto LONGVARCHAR,
	avv_app_io_prom_scad_messaggio LONGVARCHAR,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_tipo_versamento BIGINT NOT NULL,
	id_dominio BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_tipi_vers_domini_1 UNIQUE (id_dominio,id_tipo_versamento),
	-- fk/pk keys constraints
	CONSTRAINT fk_tvd_id_tipo_versamento FOREIGN KEY (id_tipo_versamento) REFERENCES tipi_versamento(id),
	CONSTRAINT fk_tvd_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT pk_tipi_vers_domini PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_tipi_vers_domini_1 ON tipi_vers_domini (id_dominio,id_tipo_versamento);
CREATE TABLE tipi_vers_domini_init_seq (id BIGINT);
INSERT INTO tipi_vers_domini_init_seq VALUES (NEXT VALUE FOR seq_tipi_vers_domini);



CREATE SEQUENCE seq_utenze_tipo_vers AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE utenze_tipo_vers
(
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_utenza BIGINT NOT NULL,
	id_tipo_versamento BIGINT NOT NULL,
	-- fk/pk keys constraints
	CONSTRAINT fk_utv_id_utenza FOREIGN KEY (id_utenza) REFERENCES utenze(id),
	CONSTRAINT fk_utv_id_tipo_versamento FOREIGN KEY (id_tipo_versamento) REFERENCES tipi_versamento(id),
	CONSTRAINT pk_utenze_tipo_vers PRIMARY KEY (id)
);

CREATE TABLE utenze_tipo_vers_init_seq (id BIGINT);
INSERT INTO utenze_tipo_vers_init_seq VALUES (NEXT VALUE FOR seq_utenze_tipo_vers);



CREATE SEQUENCE seq_documenti AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE documenti
(
	cod_documento VARCHAR(35) NOT NULL,
	descrizione VARCHAR(255) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_dominio BIGINT NOT NULL,
	id_applicazione BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_documenti_1 UNIQUE (cod_documento,id_applicazione,id_dominio),
	-- fk/pk keys constraints
	CONSTRAINT fk_doc_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT fk_doc_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT pk_documenti PRIMARY KEY (id)
);

CREATE TABLE documenti_init_seq (id BIGINT);
INSERT INTO documenti_init_seq VALUES (NEXT VALUE FOR seq_documenti);



CREATE SEQUENCE seq_versamenti AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE versamenti
(
	cod_versamento_ente VARCHAR(35) NOT NULL,
	nome VARCHAR(35),
	importo_totale DOUBLE NOT NULL,
	stato_versamento VARCHAR(35) NOT NULL,
	descrizione_stato VARCHAR(255),
	-- Indica se, decorsa la dataScadenza, deve essere aggiornato da remoto o essere considerato scaduto
	aggiornabile BOOLEAN NOT NULL,
	data_creazione TIMESTAMP NOT NULL,
	data_validita TIMESTAMP,
	data_scadenza TIMESTAMP,
	data_ora_ultimo_aggiornamento TIMESTAMP NOT NULL,
	causale_versamento VARCHAR(1024),
	debitore_tipo VARCHAR(1),
	debitore_identificativo VARCHAR(35) NOT NULL,
	debitore_anagrafica VARCHAR(70) NOT NULL,
	debitore_indirizzo VARCHAR(70),
	debitore_civico VARCHAR(16),
	debitore_cap VARCHAR(16),
	debitore_localita VARCHAR(35),
	debitore_provincia VARCHAR(35),
	debitore_nazione VARCHAR(2),
	debitore_email VARCHAR(256),
	debitore_telefono VARCHAR(35),
	debitore_cellulare VARCHAR(35),
	debitore_fax VARCHAR(35),
	tassonomia_avviso VARCHAR(35),
	tassonomia VARCHAR(35),
	cod_lotto VARCHAR(35),
	cod_versamento_lotto VARCHAR(35),
	cod_anno_tributario VARCHAR(35),
	cod_bundlekey VARCHAR(256),
	dati_allegati LONGVARCHAR,
	incasso VARCHAR(1),
	anomalie LONGVARCHAR,
	iuv_versamento VARCHAR(35),
	numero_avviso VARCHAR(35),
	ack BOOLEAN NOT NULL,
	anomalo BOOLEAN NOT NULL,
	divisione VARCHAR(35),
	direzione VARCHAR(35),
	id_sessione VARCHAR(35),
	data_pagamento TIMESTAMP,
	importo_pagato DOUBLE NOT NULL,
	importo_incassato DOUBLE NOT NULL,
	stato_pagamento VARCHAR(35) NOT NULL,
	iuv_pagamento VARCHAR(35),
	src_iuv VARCHAR(35),
	src_debitore_identificativo VARCHAR(35) NOT NULL,
	cod_rata VARCHAR(35),
	tipo VARCHAR(35) NOT NULL,
	data_notifica_avviso TIMESTAMP,
	avviso_notificato BOOLEAN,
	avv_mail_data_prom_scadenza TIMESTAMP,
	avv_mail_prom_scad_notificato BOOLEAN,
	avv_app_io_data_prom_scadenza TIMESTAMP,
	avv_app_io_prom_scad_notificat BOOLEAN,
	proprieta LONGVARCHAR,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_tipo_versamento_dominio BIGINT NOT NULL,
	id_tipo_versamento BIGINT NOT NULL,
	id_dominio BIGINT NOT NULL,
	id_uo BIGINT,
	id_applicazione BIGINT NOT NULL,
	id_documento BIGINT,
	-- unique constraints
	CONSTRAINT unique_versamenti_1 UNIQUE (cod_versamento_ente,id_applicazione),
	-- fk/pk keys constraints
	CONSTRAINT fk_vrs_id_tipo_versamento_dominio FOREIGN KEY (id_tipo_versamento_dominio) REFERENCES tipi_vers_domini(id),
	CONSTRAINT fk_vrs_id_tipo_versamento FOREIGN KEY (id_tipo_versamento) REFERENCES tipi_versamento(id),
	CONSTRAINT fk_vrs_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT fk_vrs_id_uo FOREIGN KEY (id_uo) REFERENCES uo(id),
	CONSTRAINT fk_vrs_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT fk_vrs_id_documento FOREIGN KEY (id_documento) REFERENCES documenti(id),
	CONSTRAINT pk_versamenti PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_vrs_id_pendenza ON versamenti (cod_versamento_ente,id_applicazione);
CREATE INDEX idx_vrs_data_creaz ON versamenti (data_creazione DESC);
CREATE INDEX idx_vrs_stato_vrs ON versamenti (stato_versamento);
CREATE INDEX idx_vrs_deb_identificativo ON versamenti (src_debitore_identificativo);
CREATE INDEX idx_vrs_iuv ON versamenti (src_iuv);
CREATE INDEX idx_vrs_auth ON versamenti (id_dominio,id_tipo_versamento,id_uo);
CREATE INDEX idx_vrs_prom_avviso ON versamenti (avviso_notificato,data_notifica_avviso DESC);
CREATE INDEX idx_vrs_avv_mail_prom_scad ON versamenti (avv_mail_prom_scad_notificato,avv_mail_data_prom_scadenza DESC);
CREATE INDEX idx_vrs_avv_io_prom_scad ON versamenti (avv_app_io_prom_scad_notificat,avv_app_io_data_prom_scadenza DESC);
CREATE TABLE versamenti_init_seq (id BIGINT);
INSERT INTO versamenti_init_seq VALUES (NEXT VALUE FOR seq_versamenti);



CREATE SEQUENCE seq_singoli_versamenti AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE singoli_versamenti
(
	cod_singolo_versamento_ente VARCHAR(70) NOT NULL,
	stato_singolo_versamento VARCHAR(35) NOT NULL,
	importo_singolo_versamento DOUBLE NOT NULL,
	-- MARCA BOLLO Valori possibili:\n01: Imposta di bollo
	tipo_bollo VARCHAR(2),
	-- MARCA BOLLO: Digest in Base64 del documento da bollare
	hash_documento VARCHAR(70),
	-- MARCA BOLLO: Sigla automobilistica della provincia di residenza
	provincia_residenza VARCHAR(2),
	tipo_contabilita VARCHAR(1),
	codice_contabilita VARCHAR(255),
	descrizione VARCHAR(256),
	dati_allegati LONGVARCHAR,
	indice_dati INT NOT NULL,
	descrizione_causale_rpt VARCHAR(140),
	contabilita LONGVARCHAR,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_versamento BIGINT NOT NULL,
	id_tributo BIGINT,
	id_iban_accredito BIGINT,
	id_iban_appoggio BIGINT,
	id_dominio BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_sng_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT fk_sng_id_tributo FOREIGN KEY (id_tributo) REFERENCES tributi(id),
	CONSTRAINT fk_sng_id_iban_accredito FOREIGN KEY (id_iban_accredito) REFERENCES iban_accredito(id),
	CONSTRAINT fk_sng_id_iban_appoggio FOREIGN KEY (id_iban_appoggio) REFERENCES iban_accredito(id),
	CONSTRAINT fk_sng_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT pk_singoli_versamenti PRIMARY KEY (id)
);

CREATE TABLE singoli_versamenti_init_seq (id BIGINT);
INSERT INTO singoli_versamenti_init_seq VALUES (NEXT VALUE FOR seq_singoli_versamenti);



CREATE SEQUENCE seq_pagamenti_portale AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE pagamenti_portale
(
	cod_canale VARCHAR(35),
	nome VARCHAR(255) NOT NULL,
	importo DOUBLE NOT NULL,
	versante_identificativo VARCHAR(35),
	id_sessione VARCHAR(35) NOT NULL,
	id_sessione_portale VARCHAR(255),
	id_sessione_psp VARCHAR(255),
	stato VARCHAR(35) NOT NULL,
	codice_stato VARCHAR(35) NOT NULL,
	descrizione_stato VARCHAR(1024),
	psp_redirect_url VARCHAR(1024),
	psp_esito VARCHAR(255),
	json_request LONGVARCHAR,
	data_richiesta TIMESTAMP,
	url_ritorno VARCHAR(1024),
	cod_psp VARCHAR(35),
	tipo_versamento VARCHAR(4),
	multi_beneficiario VARCHAR(35),
	ack BOOLEAN NOT NULL,
	tipo INT NOT NULL,
	principal VARCHAR(4000) NOT NULL,
	tipo_utenza VARCHAR(35) NOT NULL,
	src_versante_identificativo VARCHAR(35),
	severita INT,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_applicazione BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_ppt_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT pk_pagamenti_portale PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_prt_stato ON pagamenti_portale (stato);
CREATE INDEX idx_prt_id_sessione ON pagamenti_portale (id_sessione);
CREATE INDEX idx_prt_id_sessione_psp ON pagamenti_portale (id_sessione_psp);
CREATE INDEX idx_prt_versante_identif ON pagamenti_portale (src_versante_identificativo);
CREATE TABLE pagamenti_portale_init_seq (id BIGINT);
INSERT INTO pagamenti_portale_init_seq VALUES (NEXT VALUE FOR seq_pagamenti_portale);



CREATE SEQUENCE seq_pag_port_versamenti AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE pag_port_versamenti
(
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_pagamento_portale BIGINT NOT NULL,
	id_versamento BIGINT NOT NULL,
	-- fk/pk keys constraints
	CONSTRAINT fk_ppv_id_pagamento_portale FOREIGN KEY (id_pagamento_portale) REFERENCES pagamenti_portale(id),
	CONSTRAINT fk_ppv_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT pk_pag_port_versamenti PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_ppv_fk_prt ON pag_port_versamenti (id_pagamento_portale);
CREATE INDEX idx_ppv_fk_vrs ON pag_port_versamenti (id_versamento);
CREATE TABLE pag_port_versamenti_init_seq (id BIGINT);
INSERT INTO pag_port_versamenti_init_seq VALUES (NEXT VALUE FOR seq_pag_port_versamenti);



CREATE SEQUENCE seq_trac_notif_pag AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE trac_notif_pag
(
	nome_file VARCHAR(255) NOT NULL,
	tipo VARCHAR(20) NOT NULL,
	versione VARCHAR(20) NOT NULL,
	stato VARCHAR(20) NOT NULL,
	data_creazione TIMESTAMP NOT NULL,
	data_rt_da TIMESTAMP NOT NULL,
	data_rt_a TIMESTAMP NOT NULL,
	data_caricamento TIMESTAMP,
	data_completamento TIMESTAMP,
	raw_contenuto VARBINARY(16777215),
	bean_dati LONGVARCHAR,
	identificativo VARCHAR(255) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_dominio BIGINT NOT NULL,
	-- fk/pk keys constraints
	CONSTRAINT fk_tnp_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT pk_trac_notif_pag PRIMARY KEY (id)
);

CREATE TABLE trac_notif_pag_init_seq (id BIGINT);
INSERT INTO trac_notif_pag_init_seq VALUES (NEXT VALUE FOR seq_trac_notif_pag);



CREATE SEQUENCE seq_rpt AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE rpt
(
	cod_carrello VARCHAR(35),
	iuv VARCHAR(35) NOT NULL,
	ccp VARCHAR(35) NOT NULL,
	cod_dominio VARCHAR(35) NOT NULL,
	-- Identificativo dell'RPT utilizzato come riferimento nell'RT
	cod_msg_richiesta VARCHAR(35) NOT NULL,
	-- Data di creazione dell'RPT
	data_msg_richiesta TIMESTAMP NOT NULL,
	-- Stato RPT secondo la codifica AgID
	stato VARCHAR(35) NOT NULL,
	descrizione_stato LONGVARCHAR,
	cod_sessione VARCHAR(255),
	cod_sessione_portale VARCHAR(255),
	-- Indirizzo del portale psp a cui redirigere il cittadino per eseguire il pagamento
	psp_redirect_url VARCHAR(512),
	xml_rpt VARBINARY(16777215) NOT NULL,
	data_aggiornamento_stato TIMESTAMP NOT NULL,
	-- Indirizzo di ritorno al portale dell'ente al termine del pagamento
	callback_url LONGVARCHAR,
	modello_pagamento VARCHAR(16),
	cod_msg_ricevuta VARCHAR(35),
	data_msg_ricevuta TIMESTAMP,
	-- Esito del pagamento:\n0: Eseguito\n1: Non eseguito\n2: Parzialmente eseguito\n3: Decorrenza\n4: Decorrenza Parziale
	cod_esito_pagamento INT,
	importo_totale_pagato DOUBLE,
	xml_rt VARBINARY(16777215),
	cod_canale VARCHAR(35),
	cod_psp VARCHAR(35),
	cod_intermediario_psp VARCHAR(35),
	tipo_versamento VARCHAR(4),
	tipo_identificativo_attestante VARCHAR(1),
	identificativo_attestante VARCHAR(35),
	denominazione_attestante VARCHAR(70),
	cod_stazione VARCHAR(35) NOT NULL,
	cod_transazione_rpt VARCHAR(36),
	cod_transazione_rt VARCHAR(36),
	stato_conservazione VARCHAR(35),
	descrizione_stato_cons VARCHAR(512),
	data_conservazione TIMESTAMP,
	bloccante BOOLEAN NOT NULL,
	versione VARCHAR(35) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_versamento BIGINT NOT NULL,
	id_pagamento_portale BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_rpt_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT fk_rpt_id_pagamento_portale FOREIGN KEY (id_pagamento_portale) REFERENCES pagamenti_portale(id),
	CONSTRAINT pk_rpt PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_rpt_cod_msg_richiesta ON rpt (cod_msg_richiesta);
CREATE INDEX idx_rpt_stato ON rpt (stato);
CREATE INDEX idx_rpt_fk_vrs ON rpt (id_versamento);
CREATE INDEX idx_rpt_fk_prt ON rpt (id_pagamento_portale);

ALTER TABLE rpt ALTER COLUMN bloccante SET DEFAULT true;

CREATE TABLE rpt_init_seq (id BIGINT);
INSERT INTO rpt_init_seq VALUES (NEXT VALUE FOR seq_rpt);



CREATE SEQUENCE seq_rr AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE rr
(
	cod_dominio VARCHAR(35) NOT NULL,
	iuv VARCHAR(35) NOT NULL,
	ccp VARCHAR(35) NOT NULL,
	cod_msg_revoca VARCHAR(35) NOT NULL,
	data_msg_revoca TIMESTAMP NOT NULL,
	data_msg_esito TIMESTAMP,
	stato VARCHAR(35) NOT NULL,
	descrizione_stato VARCHAR(512),
	importo_totale_richiesto DOUBLE NOT NULL,
	cod_msg_esito VARCHAR(35),
	importo_totale_revocato DOUBLE,
	xml_rr VARBINARY(16777215) NOT NULL,
	xml_er VARBINARY(16777215),
	cod_transazione_rr VARCHAR(36),
	cod_transazione_er VARCHAR(36),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_rpt BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_rr_1 UNIQUE (cod_msg_revoca),
	-- fk/pk keys constraints
	CONSTRAINT fk_rr_id_rpt FOREIGN KEY (id_rpt) REFERENCES rpt(id),
	CONSTRAINT pk_rr PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_rr_1 ON rr (cod_msg_revoca);
CREATE TABLE rr_init_seq (id BIGINT);
INSERT INTO rr_init_seq VALUES (NEXT VALUE FOR seq_rr);



CREATE SEQUENCE seq_notifiche AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE notifiche
(
	tipo_esito VARCHAR(16) NOT NULL,
	data_creazione TIMESTAMP NOT NULL,
	stato VARCHAR(16) NOT NULL,
	descrizione_stato VARCHAR(255),
	data_aggiornamento_stato TIMESTAMP NOT NULL,
	data_prossima_spedizione TIMESTAMP NOT NULL,
	tentativi_spedizione BIGINT,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_applicazione BIGINT NOT NULL,
	id_rpt BIGINT,
	id_rr BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_ntf_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT fk_ntf_id_rpt FOREIGN KEY (id_rpt) REFERENCES rpt(id),
	CONSTRAINT fk_ntf_id_rr FOREIGN KEY (id_rr) REFERENCES rr(id),
	CONSTRAINT pk_notifiche PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_ntf_da_spedire ON notifiche (id_applicazione,stato,data_prossima_spedizione);
CREATE TABLE notifiche_init_seq (id BIGINT);
INSERT INTO notifiche_init_seq VALUES (NEXT VALUE FOR seq_notifiche);



CREATE SEQUENCE seq_notifiche_app_io AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE notifiche_app_io
(
	debitore_identificativo VARCHAR(35) NOT NULL,
	cod_versamento_ente VARCHAR(35) NOT NULL,
	cod_applicazione VARCHAR(35) NOT NULL,
	cod_dominio VARCHAR(35) NOT NULL,
	iuv VARCHAR(35) NOT NULL,
	tipo_esito VARCHAR(16) NOT NULL,
	data_creazione TIMESTAMP NOT NULL,
	stato VARCHAR(16) NOT NULL,
	descrizione_stato VARCHAR(255),
	data_aggiornamento_stato TIMESTAMP NOT NULL,
	data_prossima_spedizione TIMESTAMP NOT NULL,
	tentativi_spedizione BIGINT,
	id_messaggio VARCHAR(255),
	stato_messaggio VARCHAR(16),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_versamento BIGINT NOT NULL,
	id_tipo_versamento_dominio BIGINT NOT NULL,
	id_rpt BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_nai_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT fk_nai_id_tipo_versamento_dominio FOREIGN KEY (id_tipo_versamento_dominio) REFERENCES tipi_vers_domini(id),
	CONSTRAINT fk_nai_id_rpt FOREIGN KEY (id_rpt) REFERENCES rpt(id),
	CONSTRAINT pk_notifiche_app_io PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_nai_da_spedire ON notifiche_app_io (stato,data_prossima_spedizione);
CREATE TABLE notifiche_app_io_init_seq (id BIGINT);
INSERT INTO notifiche_app_io_init_seq VALUES (NEXT VALUE FOR seq_notifiche_app_io);



CREATE SEQUENCE seq_promemoria AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE promemoria
(
	tipo VARCHAR(16) NOT NULL,
	data_creazione TIMESTAMP NOT NULL,
	stato VARCHAR(16) NOT NULL,
	descrizione_stato VARCHAR(1024),
	destinatario_to VARCHAR(256) NOT NULL,
	destinatario_cc VARCHAR(256),
	messaggio_content_type VARCHAR(256),
	oggetto VARCHAR(512),
	messaggio LONGVARCHAR,
	allega_pdf BOOLEAN NOT NULL,
	data_aggiornamento_stato TIMESTAMP NOT NULL,
	data_prossima_spedizione TIMESTAMP NOT NULL,
	tentativi_spedizione BIGINT,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_versamento BIGINT,
	id_rpt BIGINT,
	id_documento BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_prm_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT fk_prm_id_rpt FOREIGN KEY (id_rpt) REFERENCES rpt(id),
	CONSTRAINT fk_prm_id_documento FOREIGN KEY (id_documento) REFERENCES documenti(id),
	CONSTRAINT pk_promemoria PRIMARY KEY (id)
);


ALTER TABLE promemoria ALTER COLUMN allega_pdf SET DEFAULT false;

CREATE TABLE promemoria_init_seq (id BIGINT);
INSERT INTO promemoria_init_seq VALUES (NEXT VALUE FOR seq_promemoria);



CREATE SEQUENCE seq_iuv AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE iuv
(
	prg BIGINT NOT NULL,
	iuv VARCHAR(35) NOT NULL,
	application_code INT NOT NULL,
	data_generazione DATE NOT NULL,
	tipo_iuv VARCHAR(1) NOT NULL,
	cod_versamento_ente VARCHAR(35),
	aux_digit INT NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_applicazione BIGINT NOT NULL,
	id_dominio BIGINT NOT NULL,
	-- unique constraints
	CONSTRAINT unique_iuv_1 UNIQUE (id_dominio,iuv),
	-- fk/pk keys constraints
	CONSTRAINT fk_iuv_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT fk_iuv_id_dominio FOREIGN KEY (id_dominio) REFERENCES domini(id),
	CONSTRAINT pk_iuv PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_iuv_1 ON iuv (id_dominio,iuv);
CREATE INDEX idx_iuv_rifversamento ON iuv (cod_versamento_ente,id_applicazione,tipo_iuv);

ALTER TABLE iuv ALTER COLUMN aux_digit SET DEFAULT 0;

CREATE TABLE iuv_init_seq (id BIGINT);
INSERT INTO iuv_init_seq VALUES (NEXT VALUE FOR seq_iuv);



CREATE SEQUENCE seq_incassi AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE incassi
(
	trn VARCHAR(35) NOT NULL,
	cod_dominio VARCHAR(35) NOT NULL,
	causale VARCHAR(512),
	importo DOUBLE NOT NULL,
	data_valuta DATE,
	data_contabile DATE,
	data_ora_incasso TIMESTAMP NOT NULL,
	nome_dispositivo VARCHAR(512),
	iban_accredito VARCHAR(35),
	sct VARCHAR(35),
	identificativo VARCHAR(35) NOT NULL,
	iuv VARCHAR(35),
	cod_flusso_rendicontazione VARCHAR(35),
	stato VARCHAR(35) NOT NULL,
	descrizione_stato VARCHAR(255),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_applicazione BIGINT,
	id_operatore BIGINT,
	-- unique constraints
	CONSTRAINT unique_incassi_1 UNIQUE (cod_dominio,identificativo),
	-- fk/pk keys constraints
	CONSTRAINT fk_inc_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT fk_inc_id_operatore FOREIGN KEY (id_operatore) REFERENCES operatori(id),
	CONSTRAINT pk_incassi PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_incassi_1 ON incassi (cod_dominio,identificativo);
CREATE TABLE incassi_init_seq (id BIGINT);
INSERT INTO incassi_init_seq VALUES (NEXT VALUE FOR seq_incassi);



CREATE SEQUENCE seq_fr AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE fr
(
	cod_psp VARCHAR(35) NOT NULL,
	cod_dominio VARCHAR(35) NOT NULL,
	cod_flusso VARCHAR(35) NOT NULL,
	stato VARCHAR(35) NOT NULL,
	descrizione_stato LONGVARCHAR,
	iur VARCHAR(35) NOT NULL,
	data_ora_flusso TIMESTAMP NOT NULL,
	data_regolamento TIMESTAMP,
	data_acquisizione TIMESTAMP NOT NULL,
	numero_pagamenti BIGINT,
	importo_totale_pagamenti DOUBLE,
	cod_bic_riversamento VARCHAR(35),
	xml VARBINARY(16777215) NOT NULL,
	ragione_sociale_psp VARCHAR(70),
	ragione_sociale_dominio VARCHAR(70),
	obsoleto BOOLEAN NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_incasso BIGINT,
	-- unique constraints
	CONSTRAINT unique_fr_1 UNIQUE (cod_dominio,cod_flusso,data_ora_flusso),
	-- fk/pk keys constraints
	CONSTRAINT fk_fr_id_incasso FOREIGN KEY (id_incasso) REFERENCES incassi(id),
	CONSTRAINT pk_fr PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_fr_1 ON fr (cod_dominio,cod_flusso,data_ora_flusso);
CREATE TABLE fr_init_seq (id BIGINT);
INSERT INTO fr_init_seq VALUES (NEXT VALUE FOR seq_fr);



CREATE SEQUENCE seq_pagamenti AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE pagamenti
(
	cod_dominio VARCHAR(35) NOT NULL,
	iuv VARCHAR(35) NOT NULL,
	indice_dati INT NOT NULL,
	importo_pagato DOUBLE NOT NULL,
	data_acquisizione TIMESTAMP NOT NULL,
	iur VARCHAR(35) NOT NULL,
	data_pagamento TIMESTAMP NOT NULL,
	commissioni_psp DOUBLE,
	-- Valori possibili:\nES: Esito originario\nBD: Marca da Bollo
	tipo_allegato VARCHAR(2),
	allegato VARBINARY(16777215),
	data_acquisizione_revoca TIMESTAMP,
	causale_revoca VARCHAR(140),
	dati_revoca VARCHAR(140),
	importo_revocato DOUBLE,
	esito_revoca VARCHAR(140),
	dati_esito_revoca VARCHAR(140),
	stato VARCHAR(35),
	tipo VARCHAR(35) NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_rpt BIGINT,
	id_singolo_versamento BIGINT,
	id_rr BIGINT,
	id_incasso BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_pag_id_rpt FOREIGN KEY (id_rpt) REFERENCES rpt(id),
	CONSTRAINT fk_pag_id_singolo_versamento FOREIGN KEY (id_singolo_versamento) REFERENCES singoli_versamenti(id),
	CONSTRAINT fk_pag_id_rr FOREIGN KEY (id_rr) REFERENCES rr(id),
	CONSTRAINT fk_pag_id_incasso FOREIGN KEY (id_incasso) REFERENCES incassi(id),
	CONSTRAINT pk_pagamenti PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_pag_fk_rpt ON pagamenti (id_rpt);
CREATE INDEX idx_pag_fk_sng ON pagamenti (id_singolo_versamento);
CREATE TABLE pagamenti_init_seq (id BIGINT);
INSERT INTO pagamenti_init_seq VALUES (NEXT VALUE FOR seq_pagamenti);



CREATE SEQUENCE seq_rendicontazioni AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE rendicontazioni
(
	iuv VARCHAR(35) NOT NULL,
	iur VARCHAR(35) NOT NULL,
	indice_dati INT,
	importo_pagato DOUBLE,
	esito INT,
	data TIMESTAMP,
	stato VARCHAR(35) NOT NULL,
	anomalie LONGVARCHAR,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_fr BIGINT NOT NULL,
	id_pagamento BIGINT,
	id_singolo_versamento BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_rnd_id_fr FOREIGN KEY (id_fr) REFERENCES fr(id),
	CONSTRAINT fk_rnd_id_pagamento FOREIGN KEY (id_pagamento) REFERENCES pagamenti(id),
	CONSTRAINT fk_rnd_id_singolo_versamento FOREIGN KEY (id_singolo_versamento) REFERENCES singoli_versamenti(id),
	CONSTRAINT pk_rendicontazioni PRIMARY KEY (id)
);

CREATE TABLE rendicontazioni_init_seq (id BIGINT);
INSERT INTO rendicontazioni_init_seq VALUES (NEXT VALUE FOR seq_rendicontazioni);



CREATE SEQUENCE seq_eventi AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE eventi
(
	componente VARCHAR(35),
	ruolo VARCHAR(1),
	categoria_evento VARCHAR(1),
	tipo_evento VARCHAR(255),
	sottotipo_evento VARCHAR(255),
	data TIMESTAMP,
	intervallo BIGINT,
	esito VARCHAR(4),
	sottotipo_esito VARCHAR(255),
	dettaglio_esito LONGVARCHAR,
	parametri_richiesta VARBINARY(16777215),
	parametri_risposta VARBINARY(16777215),
	dati_pago_pa LONGVARCHAR,
	cod_versamento_ente VARCHAR(35),
	cod_applicazione VARCHAR(35),
	iuv VARCHAR(35),
	ccp VARCHAR(35),
	cod_dominio VARCHAR(35),
	id_sessione VARCHAR(35),
	severita INT,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_fr BIGINT,
	id_incasso BIGINT,
	id_tracciato BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_evt_id_fr FOREIGN KEY (id_fr) REFERENCES fr(id),
	CONSTRAINT fk_evt_id_incasso FOREIGN KEY (id_incasso) REFERENCES incassi(id),
	CONSTRAINT fk_evt_id_tracciato FOREIGN KEY (id_tracciato) REFERENCES tracciati(id),
	CONSTRAINT pk_eventi PRIMARY KEY (id)
);

-- index
CREATE INDEX idx_evt_data ON eventi (data);
CREATE INDEX idx_evt_fk_vrs ON eventi (cod_applicazione,cod_versamento_ente);
CREATE INDEX idx_evt_id_sessione ON eventi (id_sessione);
CREATE INDEX idx_evt_iuv ON eventi (iuv);
CREATE TABLE eventi_init_seq (id BIGINT);
INSERT INTO eventi_init_seq VALUES (NEXT VALUE FOR seq_eventi);



CREATE SEQUENCE seq_batch AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE batch
(
	cod_batch VARCHAR(255) NOT NULL,
	nodo VARCHAR(255),
	inizio TIMESTAMP,
	aggiornamento TIMESTAMP,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	-- unique constraints
	CONSTRAINT unique_batch_1 UNIQUE (cod_batch),
	-- fk/pk keys constraints
	CONSTRAINT pk_batch PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_batch_1 ON batch (cod_batch);
CREATE TABLE batch_init_seq (id BIGINT);
INSERT INTO batch_init_seq VALUES (NEXT VALUE FOR seq_batch);



CREATE SEQUENCE seq_stampe AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE stampe
(
	data_creazione TIMESTAMP NOT NULL,
	tipo VARCHAR(16) NOT NULL,
	pdf VARBINARY(16777215),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_versamento BIGINT,
	id_documento BIGINT,
	-- unique constraints
	CONSTRAINT unique_stampe_1 UNIQUE (id_versamento,id_documento,tipo),
	-- fk/pk keys constraints
	CONSTRAINT fk_stm_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT fk_stm_id_documento FOREIGN KEY (id_documento) REFERENCES documenti(id),
	CONSTRAINT pk_stampe PRIMARY KEY (id)
);

-- index
CREATE UNIQUE INDEX index_stampe_1 ON stampe (id_versamento,id_documento,tipo);
CREATE TABLE stampe_init_seq (id BIGINT);
INSERT INTO stampe_init_seq VALUES (NEXT VALUE FOR seq_stampe);



CREATE SEQUENCE seq_operazioni AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE operazioni
(
	tipo_operazione VARCHAR(16) NOT NULL,
	linea_elaborazione BIGINT NOT NULL,
	stato VARCHAR(16) NOT NULL,
	dati_richiesta VARBINARY(16777215),
	dati_risposta VARBINARY(16777215),
	dettaglio_esito VARCHAR(255),
	cod_versamento_ente VARCHAR(255),
	cod_dominio VARCHAR(35),
	iuv VARCHAR(35),
	trn VARCHAR(35),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_tracciato BIGINT NOT NULL,
	id_applicazione BIGINT,
	id_stampa BIGINT,
	id_versamento BIGINT,
	-- fk/pk keys constraints
	CONSTRAINT fk_ope_id_tracciato FOREIGN KEY (id_tracciato) REFERENCES tracciati(id),
	CONSTRAINT fk_ope_id_applicazione FOREIGN KEY (id_applicazione) REFERENCES applicazioni(id),
	CONSTRAINT fk_ope_id_stampa FOREIGN KEY (id_stampa) REFERENCES stampe(id),
	CONSTRAINT fk_ope_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT pk_operazioni PRIMARY KEY (id)
);

CREATE TABLE operazioni_init_seq (id BIGINT);
INSERT INTO operazioni_init_seq VALUES (NEXT VALUE FOR seq_operazioni);



CREATE SEQUENCE seq_gp_audit AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE gp_audit
(
	data TIMESTAMP NOT NULL,
	id_oggetto BIGINT NOT NULL,
	tipo_oggetto VARCHAR(255) NOT NULL,
	oggetto LONGVARCHAR NOT NULL,
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_operatore BIGINT NOT NULL,
	-- fk/pk keys constraints
	CONSTRAINT fk_aud_id_operatore FOREIGN KEY (id_operatore) REFERENCES operatori(id),
	CONSTRAINT pk_gp_audit PRIMARY KEY (id)
);

CREATE TABLE gp_audit_init_seq (id BIGINT);
INSERT INTO gp_audit_init_seq VALUES (NEXT VALUE FOR seq_gp_audit);



CREATE TABLE ID_MESSAGGIO_RELATIVO
(
	COUNTER BIGINT NOT NULL,
	PROTOCOLLO VARCHAR(255) NOT NULL,
	INFO_ASSOCIATA VARCHAR(255) NOT NULL,
	ora_registrazione TIMESTAMP,
	-- fk/pk columns
	-- fk/pk keys constraints
	CONSTRAINT pk_ID_MESSAGGIO_RELATIVO PRIMARY KEY (PROTOCOLLO,INFO_ASSOCIATA)
);


ALTER TABLE ID_MESSAGGIO_RELATIVO ALTER COLUMN ora_registrazione SET DEFAULT CURRENT_TIMESTAMP;


CREATE SEQUENCE seq_allegati AS BIGINT START WITH 1 INCREMENT BY 1 ; -- (Scommentare in hsql 2.x) NO CYCLE;

CREATE TABLE allegati
(
	nome VARCHAR(255) NOT NULL,
	tipo VARCHAR(255),
	descrizione VARCHAR(255),
	data_creazione TIMESTAMP NOT NULL,
	raw_contenuto VARBINARY(16777215),
	-- fk/pk columns
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	id_versamento BIGINT NOT NULL,
	-- fk/pk keys constraints
	CONSTRAINT fk_all_id_versamento FOREIGN KEY (id_versamento) REFERENCES versamenti(id),
	CONSTRAINT pk_allegati PRIMARY KEY (id)
);

CREATE TABLE allegati_init_seq (id BIGINT);
INSERT INTO allegati_init_seq VALUES (NEXT VALUE FOR seq_allegati);


